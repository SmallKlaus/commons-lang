name: SonarQube Historical Analysis

# Allow manual triggering from the GitHub UI
on:
  workflow_dispatch:
    inputs:
      tagsToScan:
        description: 'Comma-separated Git tags to scan (e.g., v1.0.0,v1.1.0,v1.2.0)'
        required: true

jobs:
  # This job takes the comma-separated string and converts it to a JSON array
  setup:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.set-tags.outputs.tags_json }}
    steps:
      - name: Prepare tags for matrix
        id: set-tags
        run: |
          # This converts "v1,v2,v3" into ["v1","v2","v3"]
          tags_json=$(echo '[ "${{ github.event.inputs.tagsToScan }}" ]' | sed 's/,/","/g')
          echo "tags_json=$tags_json" >> $GITHUB_OUTPUT
  # This job runs the analysis in parallel using the matrix from the setup job
  sonar-analysis:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag: ${{ fromJSON(needs.setup.outputs.tags) }}
      fail-fast: false

    name: Analyze Tag ${{ matrix.tag }}
    
    # Define environment variables at the job level to be available in all steps
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout code at version ${{ matrix.tag }}
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.tag }}
          fetch-depth: 0

      - name: Get Commit Date
        id: get-date
        run: echo "date=$(git log -1 --format=%as ${{ matrix.tag }})" >> $GITHUB_OUTPUT

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # --- START: MODIFIED ANALYSIS STEPS ---

      - name: Attempt initial analysis (parallel with tests)
        id: initial-build
        # This tells the job not to fail immediately if this step has an error
        continue-on-error: true
        run: |
          mvn verify sonar:sonar \
            -Dsonar.projectKey=smallklaus_commons-lang \
            -Dsonar.organization=smallklaus \
            -Dsonar.projectVersion=${{ matrix.tag }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.projectDate=${{ steps.get-date.outputs.date }}

      - name: Retry analysis in safe mode (if initial build failed)
        # This step ONLY runs if the "initial-build" step above failed
        if: steps.initial-build.outcome == 'failure'
        # Skips packaging, stops aftar class. generation
        run: |
          echo "Initial build failed. Retrying in safe mode (skipping tests, single thread)..."
          
          mvn compile sonar:sonar \
            -Dsonar.projectKey=smallklaus_commons-lang \
            -Dsonar.organization=smallklaus \
            -Dsonar.projectVersion=${{ matrix.tag }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.projectDate=${{ steps.get-date.outputs.date }} \
            -DskipTests=true \
            -T 1
      
      # This step checks the final outcome. If the retry also failed, the job will fail.
      - name: Check build status
        if: steps.initial-build.outcome == 'failure' && steps.initial-build.conclusion == 'failure'
        run: |
            echo "The build failed even after retrying in safe mode."
            exit 1
            
      # --- END: MODIFIED ANALYSIS STEPS ---
